{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dinar\\\\Desktop\\\\25_MyFrontendProject-master\\\\src\\\\pages\\\\home.jsx\";\nimport React from 'react';\nimport Spinner from \"../components/spinner\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as URL from '../router/url';\nimport { uploadDataToStore, updateOnPageShopFilter } from '../store/action_creatores';\nimport * as PropTypes from 'prop-types';\nHomePage.propTypes = {\n  catalog: PropTypes.array,\n  catalogLoading: PropTypes.bool,\n  uploadDataToStore: PropTypes.func,\n  onShopPage: PropTypes.bool,\n  updateOnPageShopFilter: PropTypes.func\n};\n\nfunction HomePage(props) {\n  // рендерим список ВСЕХ товаров в home (Яндекс смотрит на это с грустью и недоумением)\n  const {\n    catalog,\n    catalogLoading,\n    uploadDataToStore,\n    onShopPage,\n    updateOnPageShopFilter\n  } = props;\n\n  if (onShopPage) {\n    uploadDataToStore(\"catalog\"); // иначе при включённых фильтрах корзина не отображает элементы, которые не загружены с сервера из-за фильтров\n\n    updateOnPageShopFilter(false); // говорим всем остальным, что мы больше не на странице shop и каталог по-прежнему доступен в полном объёме.\n  }\n\n  ;\n\n  function allProductsRender() {\n    if (catalogLoading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      });\n    }\n\n    ;\n\n    if (catalog && catalog.length) {\n      return catalog.map(item => {\n        return (\n          /*#__PURE__*/\n          // <div className=\"hasSeen\"><h2>Похоже на то, что вы смотрели</h2></div>\n          React.createElement(\"div\", {\n            className: \"single-products-catagory clearfix\",\n            key: item.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            className: \"App-link\",\n            to: `${URL.PRODUCT}/${item.id}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            style: {\n              marginTop: \"140px\"\n            },\n            src: `http://test-api.ipromote.ru/img/${item.img_url}`,\n            alt: item.title,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"hover-content\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"line\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }\n          }, \"From $\", item.price), /*#__PURE__*/React.createElement(\"h4\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }\n          }, item.title)))\n        );\n      });\n    }\n\n    ;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products-catagories-area clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"amado-pro-catagory clearfix\",\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 22\n    }\n  }, \"\\u041F\\u043E\\u0445\\u043E\\u0436\\u0435 \\u043D\\u0430 \\u0442\\u043E, \\u0447\\u0442\\u043E \\u0432\\u044B \\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043B\\u0438\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), allProductsRender()));\n}\n\n;\n\nconst mapStateToProps = store => {\n  return {\n    catalog: store.app.catalog.data,\n    catalogLoading: store.app.isLoading.catalog || false,\n    onShopPage: store.app.onShopPage,\n    singleImageItem: store.app.singleImageItem\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uploadDataToStore: (actions, key) => dispatch(uploadDataToStore(actions, key)),\n    updateOnPageShopFilter: bool => dispatch(updateOnPageShopFilter(bool))\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(HomePage));","map":{"version":3,"sources":["C:/Users/Dinar/Desktop/25_MyFrontendProject-master/src/pages/home.jsx"],"names":["React","Spinner","connect","Link","URL","uploadDataToStore","updateOnPageShopFilter","PropTypes","HomePage","propTypes","catalog","array","catalogLoading","bool","func","onShopPage","props","allProductsRender","length","map","item","id","PRODUCT","marginTop","img_url","title","price","display","flexWrap","mapStateToProps","store","app","data","isLoading","singleImageItem","mapDispatchToProps","dispatch","actions","key","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,eAArB;AACA,SAASC,iBAAT,EAA4BC,sBAA5B,QAA0D,2BAA1D;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AAEAC,QAAQ,CAACC,SAAT,GAAqB;AACjBC,EAAAA,OAAO,EAAEH,SAAS,CAACI,KADF;AAEjBC,EAAAA,cAAc,EAAEL,SAAS,CAACM,IAFT;AAGjBR,EAAAA,iBAAiB,EAAEE,SAAS,CAACO,IAHZ;AAIjBC,EAAAA,UAAU,EAAER,SAAS,CAACM,IAJL;AAKjBP,EAAAA,sBAAsB,EAAEC,SAAS,CAACO;AALjB,CAArB;;AAQA,SAASN,QAAT,CAAkBQ,KAAlB,EAAyB;AAAE;AAEvB,QAAM;AACFN,IAAAA,OADE;AAEFE,IAAAA,cAFE;AAGFP,IAAAA,iBAHE;AAIFU,IAAAA,UAJE;AAKFT,IAAAA;AALE,MAMFU,KANJ;;AAQA,MAAID,UAAJ,EAAgB;AACZV,IAAAA,iBAAiB,CAAC,SAAD,CAAjB,CADY,CACkB;;AAC9BC,IAAAA,sBAAsB,CAAC,KAAD,CAAtB,CAFY,CAEmB;AAClC;;AAAA;;AAED,WAASW,iBAAT,GAA6B;AAEzB,QAAIL,cAAJ,EAAoB;AAChB,0BAAQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AAAA;;AAED,QAAIF,OAAO,IAAIA,OAAO,CAACQ,MAAvB,EAA+B;AAE3B,aAAOR,OAAO,CAACS,GAAR,CAAaC,IAAD,IAAU;AAEzB;AAAA;AACI;AACA;AAAK,YAAA,SAAS,EAAC,mCAAf;AAEI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAIQ,oBAAC,IAAD;AACI,YAAA,SAAS,EAAC,UADd;AAEI,YAAA,EAAE,EAAG,GAAEjB,GAAG,CAACkB,OAAQ,IAAGF,IAAI,CAACC,EAAG,EAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAII;AACI,YAAA,KAAK,EAAE;AAAEE,cAAAA,SAAS,EAAE;AAAb,aADX;AAEI,YAAA,GAAG,EAAG,mCAAkCH,IAAI,CAACI,OAAQ,EAFzD;AAGI,YAAA,GAAG,EAAEJ,IAAI,CAACK,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CAJR,eAcQ;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAUL,IAAI,CAACM,KAAf,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKN,IAAI,CAACK,KAAV,CAHJ,CAdR;AAFJ;AAuBH,OAzBM,CAAP;AA0BH;;AAAA;AACJ;;AAAA;AAED,sBAEI;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AACI,IAAA,KAAK,EAAE;AACHE,MAAAA,OAAO,EAAE,MADN;AAEHC,MAAAA,QAAQ,EAAE;AAFP,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wJAAL,CALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASKX,iBAAiB,EATtB,CADJ,CAFJ;AAgBH;;AAAA;;AAED,MAAMY,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHpB,IAAAA,OAAO,EAAEoB,KAAK,CAACC,GAAN,CAAUrB,OAAV,CAAkBsB,IADxB;AAEHpB,IAAAA,cAAc,EAAEkB,KAAK,CAACC,GAAN,CAAUE,SAAV,CAAoBvB,OAApB,IAA+B,KAF5C;AAGHK,IAAAA,UAAU,EAAEe,KAAK,CAACC,GAAN,CAAUhB,UAHnB;AAIHmB,IAAAA,eAAe,EAAEJ,KAAK,CAACC,GAAN,CAAUG;AAJxB,GAAP;AAMH,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH/B,IAAAA,iBAAiB,EAAE,CAACgC,OAAD,EAAUC,GAAV,KAAkBF,QAAQ,CAAC/B,iBAAiB,CAACgC,OAAD,EAAUC,GAAV,CAAlB,CAD1C;AAEHhC,IAAAA,sBAAsB,EAAGO,IAAD,IAAUuB,QAAQ,CAAC9B,sBAAsB,CAACO,IAAD,CAAvB;AAFvC,GAAP;AAIH,CALD;;AAOA,eAAeb,KAAK,CAACuC,IAAN,CAAWrC,OAAO,CAAC2B,eAAD,EAAkBM,kBAAlB,CAAP,CAA6C3B,QAA7C,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport Spinner from \"../components/spinner\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as URL from '../router/url';\nimport { uploadDataToStore, updateOnPageShopFilter } from '../store/action_creatores';\nimport * as PropTypes from 'prop-types';\n\nHomePage.propTypes = {\n    catalog: PropTypes.array,\n    catalogLoading: PropTypes.bool,\n    uploadDataToStore: PropTypes.func,\n    onShopPage: PropTypes.bool,\n    updateOnPageShopFilter: PropTypes.func,\n};\n\nfunction HomePage(props) { // рендерим список ВСЕХ товаров в home (Яндекс смотрит на это с грустью и недоумением)\n\n    const {\n        catalog,\n        catalogLoading,\n        uploadDataToStore,\n        onShopPage,\n        updateOnPageShopFilter,\n    } = props;\n\n    if (onShopPage) {\n        uploadDataToStore(\"catalog\"); // иначе при включённых фильтрах корзина не отображает элементы, которые не загружены с сервера из-за фильтров\n        updateOnPageShopFilter(false); // говорим всем остальным, что мы больше не на странице shop и каталог по-прежнему доступен в полном объёме.\n    };\n\n    function allProductsRender() {\n\n        if (catalogLoading) {\n            return (<Spinner />);\n        };\n\n        if (catalog && catalog.length) {\n\n            return catalog.map((item) => {\n\n                return (\n                    // <div className=\"hasSeen\"><h2>Похоже на то, что вы смотрели</h2></div>\n                    <div className=\"single-products-catagory clearfix\"\n\n                        key={item.id}\n                    >\n                            <Link\n                                className=\"App-link\"\n                                to={`${URL.PRODUCT}/${item.id}`}\n                            >\n                                <img\n                                    style={{ marginTop: \"140px\" }}\n                                    src={`http://test-api.ipromote.ru/img/${item.img_url}`}\n                                    alt={item.title}\n                                />\n                            </Link>\n                            <div className=\"hover-content\">\n                                <div className=\"line\"></div>\n                                <p>From ${item.price}</p>\n                                <h4>{item.title}</h4>\n                            </div>\n                    </div>\n                );\n            });\n        };\n    };\n\n    return (\n\n        <div className=\"products-catagories-area clearfix\">\n            <div className=\"amado-pro-catagory clearfix\"\n                style={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                }}>\n                <div><h2>Похоже на то, что вы смотрели</h2>\n\n                </div>\n                <br/>\n                {allProductsRender()}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        catalog: store.app.catalog.data,\n        catalogLoading: store.app.isLoading.catalog || false,\n        onShopPage: store.app.onShopPage,\n        singleImageItem: store.app.singleImageItem,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        uploadDataToStore: (actions, key) => dispatch(uploadDataToStore(actions, key)),\n        updateOnPageShopFilter: (bool) => dispatch(updateOnPageShopFilter(bool)),\n    };\n};\n\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(HomePage));"]},"metadata":{},"sourceType":"module"}