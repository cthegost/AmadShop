{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dinar\\\\Desktop\\\\25_MyFrontendProject-master\\\\src\\\\components\\\\ShopSidebar\\\\left_components\\\\wid_color.jsx\";\nimport React from 'react';\nimport Spinner from '../../spinner';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport { engineLoaderMazaFucker, paginatorEngine, colorFilterUpdater } from '../../../store/action_creatores';\nWidColor.propTypes = {\n  colors: PropTypes.array,\n  colorsLoading: PropTypes.bool,\n  engineLoaderMazaFucker: PropTypes.func,\n  currentColorFilter: PropTypes.string,\n  colorFilterUpdater: PropTypes.func,\n  paginatorEngine: PropTypes.func\n};\n\nfunction WidColor(props) {\n  const {\n    colors,\n    colorsLoading,\n    engineLoaderMazaFucker,\n    currentColorFilter,\n    colorFilterUpdater,\n    paginatorEngine\n  } = props;\n\n  if (colorsLoading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    });\n  }\n\n  ;\n\n  function colorHandler(e) {\n    paginatorEngine(\"0\"); // сбрасываем страницу на первую при изменении фильтра цветов\n\n    if (e.target.getAttribute(\"name\") === \"ALL\") {\n      engineLoaderMazaFucker(\"catalog\");\n    } else {\n      engineLoaderMazaFucker(\"catalog\", `?colors=${e.target.getAttribute(\"name\")}`);\n    }\n\n    ;\n    colorFilterUpdater(e.target.getAttribute(\"name\"));\n  }\n\n  ;\n\n  function colorCheckboxGenerator() {\n    return colors.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: colorHandler,\n        name: item.id,\n        style: {\n          backgroundColor: `#${item.color}`,\n          width: \"30px\",\n          height: \"30px\",\n          display: \"block\",\n          borderRadius: \"50%\",\n          position: \"relative\",\n          zIndex: \"1\",\n          boxShadow: \"0 0 3px rgba(0, 0, 0, 0.15)\",\n          border: `${currentColorFilter === item.id ? \"1px solid black\" : \"none\"}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget color mb-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"widget-title mb-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Color\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: colorHandler,\n    name: \"ALL\",\n    style: {\n      background: `linear-gradient(90deg, red, yellow, green, blue)`,\n      width: \"30px\",\n      height: \"30px\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      position: \"relative\",\n      zIndex: \"1\",\n      boxShadow: \"0 0 3px rgba(0, 0, 0, 0.15)\",\n      border: `${currentColorFilter === \"ALL\" ? \"1px solid black\" : \"none\"}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, colorCheckboxGenerator())));\n}\n\nconst mapStateToProps = store => {\n  return {\n    colors: store.app.colors.data,\n    colorsLoading: store.app.isLoading.colors || false,\n    currentColorFilter: store.app.currentColorFilter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    engineLoaderMazaFucker: (actions, key) => dispatch(engineLoaderMazaFucker(actions, key)),\n    paginatorEngine: string => dispatch(paginatorEngine(string)),\n    colorFilterUpdater: string => dispatch(colorFilterUpdater(string))\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(WidColor));","map":{"version":3,"sources":["C:/Users/Dinar/Desktop/25_MyFrontendProject-master/src/components/ShopSidebar/left_components/wid_color.jsx"],"names":["React","Spinner","connect","PropTypes","engineLoaderMazaFucker","paginatorEngine","colorFilterUpdater","WidColor","propTypes","colors","array","colorsLoading","bool","func","currentColorFilter","string","props","colorHandler","e","target","getAttribute","colorCheckboxGenerator","map","item","id","backgroundColor","color","width","height","display","borderRadius","position","zIndex","boxShadow","border","background","mapStateToProps","store","app","data","isLoading","mapDispatchToProps","dispatch","actions","key","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Spinner from '../../spinner';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport {\n    engineLoaderMazaFucker,\n    paginatorEngine,\n    colorFilterUpdater,\n} from '../../../store/action_creatores';\n\nWidColor.propTypes = {\n    colors: PropTypes.array,\n    colorsLoading: PropTypes.bool,\n    engineLoaderMazaFucker: PropTypes.func,\n    currentColorFilter: PropTypes.string,\n    colorFilterUpdater: PropTypes.func,\n    paginatorEngine: PropTypes.func,\n};\n\nfunction WidColor(props) {\n\n    const {\n        colors,\n        colorsLoading,\n        engineLoaderMazaFucker,\n        currentColorFilter,\n        colorFilterUpdater,\n        paginatorEngine,\n    } = props;\n\n    if (colorsLoading) {\n        return (<Spinner />);\n    };\n\n    function colorHandler(e) {\n        paginatorEngine(\"0\"); // сбрасываем страницу на первую при изменении фильтра цветов\n        if (e.target.getAttribute(\"name\") === \"ALL\") {\n            engineLoaderMazaFucker(\"catalog\");\n        } else {\n            engineLoaderMazaFucker(\"catalog\", `?colors=${e.target.getAttribute(\"name\")}`);\n        };\n        colorFilterUpdater(e.target.getAttribute(\"name\"));\n    };\n\n    function colorCheckboxGenerator() {\n\n        return colors.map((item) => {\n            return (\n                <li\n                    key={item.id}\n                >\n                    <div\n                        onClick={colorHandler}\n                        name={item.id}\n                        style={{\n                            backgroundColor: `#${item.color}`,\n                            width: \"30px\",\n                            height: \"30px\",\n                            display: \"block\",\n                            borderRadius: \"50%\",\n                            position: \"relative\",\n                            zIndex: \"1\",\n                            boxShadow: \"0 0 3px rgba(0, 0, 0, 0.15)\",\n                            border: `${currentColorFilter === item.id ? \"1px solid black\": \"none\"}`,\n                        }}\n                    >\n                    </div>\n                </li>\n            )\n        })\n    }\n\n    return (\n        <div className=\"widget color mb-50\">\n            <h6 className=\"widget-title mb-30\">Color</h6>\n\n            <div className=\"widget-desc\">\n                <div\n                    onClick={colorHandler}\n                    name=\"ALL\"\n                    style={{\n                        background: `linear-gradient(90deg, red, yellow, green, blue)`,\n                        width: \"30px\",\n                        height: \"30px\",\n                        display: \"block\",\n                        borderRadius: \"50%\",\n                        position: \"relative\",\n                        zIndex: \"1\",\n                        boxShadow: \"0 0 3px rgba(0, 0, 0, 0.15)\",\n                        border: `${currentColorFilter === \"ALL\" ? \"1px solid black\": \"none\"}`,\n                    }}\n                >\n                </div>\n                <br />\n                <ul className=\"d-flex\">\n                    {colorCheckboxGenerator()}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (store) => {\n    return {\n        colors: store.app.colors.data,\n        colorsLoading: store.app.isLoading.colors || false,\n        currentColorFilter: store.app.currentColorFilter\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        engineLoaderMazaFucker: (actions, key) => dispatch(engineLoaderMazaFucker(actions, key)),\n        paginatorEngine: (string) => dispatch(paginatorEngine(string)),\n        colorFilterUpdater: (string) => dispatch(colorFilterUpdater(string)),\n    };\n};\n\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(WidColor));"]},"metadata":{},"sourceType":"module"}